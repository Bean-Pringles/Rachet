use crate::iso;
//crate::iso tells you to compile to an iso


fn main() { //fn main is the function first ran
    print("Hello World!"); //prints Hello World. Also make it so it adds on a Newline
    let x = 5 * 5; //creates a varible x with a value of 25. This uses type infrence
    let y: i32 = 4 / 2; //create varible y with a value of 2. This doesn't use type infrence
    //it can use type infrence but if specified, it will use the specified type.
    
	if (x == 25 && y == 2) {
		print("Correct");
	} else if (x == 25 && not y == 2) {
		print("Y is wrong");
		print(y);
		//Output:
		//Y is wrong
		//(this would print the value of y)
	} else {
		print("What is this on");
	}
	
	let name = input("Name:");
	
	let gender: string = input("Gender:");
//The input function doesn't use ps2, it gets it from the BIOS or if you think uou can, from the USB protocol. Anything but ps2.
	
	nameFn(name);
	
	os("shutdown"); //Shutsdown the OS, get rid of the need for quotes
}


fn nameFn(name) {
	//The match function matched the input varible and then runs the command from it
	match (name) {
		"Bob", return "Hi bob";
		"Nancy", print("Hello, Nancy");
		"John", os("shutdown");
	}
	
	print("Only Nancy should be left");
}
//If there is anything here without semicolins, thats just a me mistake, it requires semicolins
